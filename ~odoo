version: '3.7'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus3_data:/prometheus
    networks:
      - monitoring_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana3_data:/var/lib/grafana:rw
    depends_on:
      - prometheus
    networks:
      - monitoring_network

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    ports:
      - "9113:9113"
    environment:
      - NGINX_SERVER=nginx  # Use correct container name/IP
    restart: unless-stopped
    networks:
      - monitoring_network

  mktxp:
    restart: on-failure
    image: swoga/mikrotik-exporter
    volumes:
      - ./mktxp:/root/mktxp:rw
    ports:
      - "9436:9436"
    networks:
      - monitoring_network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "192.168.88.232:9100:9100"
    networks:
      - monitoring_network

  odoo:
    image: odoo:17.0
    container_name: odoo
    ports:
      - "8069:8069"
    environment:
      - HOST=db
      - USER=odoo
      - PASSWORD=odoo_password
    volumes:
      - odoo-data:/var/lib/odoo
      - ./odoo_addons:/mnt/extra-addons  # Custom modules
    networks:
      - monitoring_network

  db:
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_DB=odoo
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - monitoring_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    depends_on: 
      - odoo
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl  # SSL certificates
    networks:
      - monitoring_network
volumes:
  prometheus3_data:
  grafana3_data:
  odoo-data:
  postgres-data:

networks:
  monitoring_network:
    driver: bridge
